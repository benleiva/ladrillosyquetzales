---
title: "Datascrapping"
author: "Benjamin"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(rvest)
library(dplyr)
library(tidyr)
library(writexl)
library(moderndive)
library(ggplot2)
```

```{r}
#Conectar con página web
url <- read_html("https://www.encuentra24.com/guatemala-es/bienes-raices-venta-de-propiedades-apartamentos?q=number.15")

#Obtener datos de página web. Aquí se obtiene los html_nodes usando Selector Gardget - Extensión de Chrome
precio <- url %>% html_nodes(".ann-ad-tile__price") %>% html_text()

metraje <- url %>% html_nodes(".ann-ad-tile__icons-item:nth-child(1)") %>% html_text()

hab <- url %>% html_nodes(".ann-ad-tile__icons-item:nth-child(2) , .icon-rooms") %>% html_text()
hab <- data.frame(hab)
toDelete <- seq(0, 100, 2)
hab <-  hab[-toDelete, ]

parq <- url %>% html_nodes(".ann-ad-tile__icons-item~ .ann-ad-tile__icons-item+ .ann-ad-tile__icons-item") %>% html_text()

zona <- url %>% html_nodes(".ann-ad-tile__footer-item+ .ann-ad-tile__footer-item") %>% html_text()

#Pasar de datos a base de datos lista para trabajar
data <- data.frame(precio, metraje, hab, parq, zona) %>% 
  separate(metraje, c("metraje", "unidad"), sep = ' ') %>% 
  separate(precio, c("signo", "precio"), sep = 2) %>%
  mutate(hab = as.numeric(hab),
         parq = as.numeric(parq),
         metraje = as.numeric(metraje),
         signo = as.character(signo))

data$precio <- gsub("[^[:digit:]]", "", data$precio)

data <- data %>% 
  mutate(precio = as.numeric(precio),
         precio = precio/1000)

data$precioQ = with(data, ifelse(signo %in% c('\n$'), data$precio*7.7, data$precio))

df <- data

x1 <- "https://www.encuentra24.com/guatemala-es/bienes-raices-venta-de-propiedades-apartamentos."
i <- 2
x3 <- "?q=number.15"

for(i in 2:42) {
  
  if(i %in% c(1,11,13,21,22,23,26,27,35)) next
  
  new_url<- read_html(sprintf("%s%.0f%s", x1, i, x3))
  
#Obtener datos de página web. Aquí se obtiene los html_nodes usando Selector Gardget - Extensión de Chrome
  precio <- new_url %>% html_nodes(".ann-ad-tile__price") %>% html_text()
  
  metraje <- new_url %>% html_nodes(".ann-ad-tile__icons-item:nth-child(1)") %>% html_text()
  
  hab <- new_url %>% html_nodes(".ann-ad-tile__icons-item:nth-child(2) , .icon-rooms") %>% html_text()
  hab <- data.frame(hab)
  toDelete <- seq(0, 100, 2)
  hab <-  hab[-toDelete, ]
  
  parq <- new_url %>% html_nodes(".ann-ad-tile__icons-item~ .ann-ad-tile__icons-item+ .ann-ad-tile__icons-item") %>% html_text()
  
  zona <- new_url %>% html_nodes(".ann-ad-tile__footer-item+ .ann-ad-tile__footer-item") %>% html_text()
  
#Pasar de datos a base de datos lista para trabajar
  data <- data.frame(precio, metraje, hab, parq, zona) %>% 
    separate(metraje, c("metraje", "unidad"), sep = ' ') %>% 
    separate(precio, c("signo", "precio"), sep = 2) %>%
    mutate(hab = as.numeric(hab),
           parq = as.numeric(parq),
           metraje = as.numeric(metraje),
           signo = as.character(signo))
  
  data$precio <- gsub("[^[:digit:]]", "", data$precio)
  
  data <- data %>% 
    mutate(precio = as.numeric(precio),
           precio = precio/1000)
  
  data$precioQ = with(data, ifelse(signo %in% c('\n$'), data$precio*7.7, data$precio))
  
  df <- rbind(df,data)
  
  i=i+1
}

```

```{r}
#Guardar base de datos

save(df, file = "scrapped_07_01_2023.Rdata")

```

```{r}
#cargar y finiquitar base de datos
load("scrapped_07_01_2023.Rdata")

df <- df %>% filter(precioQ < 7000)
df <- df %>% filter(metraje < 410)
df$zona <-  str_replace(df$zona, "Guatemala City","Guatemala")
df$zona <-  str_replace(df$zona, " Zona 13","Zona 13")
df$zona <-  str_replace(df$zona, " Zona 10","Zona 10")
df <- df %>% mutate(zona = as.factor(zona))

library(writexl)
write_xlsx(df,"data.xlsx")

#Hacer regresiones

modelo1 <- lm(precioQ ~ metraje + hab + parq + factor(zona), data = df)

summary(modelo1)

# get_regression_table(modelo1)
# get_regression_points(modelo1)
# get_regression_summaries(modelo1)

ggplot(df, aes(x = metraje, y = precioQ)) +
  geom_point(aes(colour = zona), alpha = 0.5) +
  labs(
    x = "Metraje",
    y = "Precio (millones de Q)") +
  geom_smooth(method = "lm", se = FALSE) +
  theme_bw()

```


